name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # This will trigger the pipeline on push to the main branch
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Frontend Deployment Steps
      - name: Set up Node.js for Frontend
        uses: actions/setup-node@v3
        with:
          node-version: 'v20.18.0'  # Use the Node.js version you need

      - name: Install Frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Build Frontend
        run: |
          cd frontend
          npm run dev

      # Backend Deployment Steps
      - name: Set up Node.js for Backend
        uses: actions/setup-node@v3
        with:
          node-version: 'v20.18.0'

      - name: Install Backend dependencies
        run: |
          cd backend
          npm install

      - name: Run Backend 
        run: |
          cd backend
          npm run start:prod

  deploy:
    needs: build  # Ensures deploy only runs if the build job is successful
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Login to Heroku
      - name: Heroku Login
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh  # Install Heroku CLI
          echo ${{ secrets.HEROKU_API_KEY }} | heroku auth:token  # Login to Heroku using the API key

      # Deploy Frontend to Heroku
      - name: Deploy Frontend to Heroku
        run: |
          cd frontend
          git remote add heroku https://git.heroku.com/your-frontend-app.git
          git push heroku main 

      # Deploy Backend to Heroku
      - name: Deploy Backend to Heroku
        run: |
          cd backend
          git remote add heroku https://git.heroku.com/your-backend-app.git
          git push heroku main  # Push to Heroku
